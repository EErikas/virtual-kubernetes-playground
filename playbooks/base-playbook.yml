---
- name: Setup base image
  hosts: all
  become: true
  tasks:
  - name: Fail if playbook is not running on Debian machines
    fail:
      msg: "This playbook is not meant to be run on the target host. Run it from your local machine."
    when: ansible_distribution != 'Debian' or ansible_distribution_major_version != "12"

  - name: Install required packages
    apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes 
        purge: true
    vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg-agent
        - gnupg2
        - vim
        - ufw
        - git
        - jq
        - build-essential

  - name: Disable swap on all nodes
    command: swapoff -a
  
  - name: Remove swap from /etc/fstab
    command: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  
  - name: Set kernel parameters on all nodes
    blockinfile:
      create: true
      path: /etc/modules-load.d/k8s.conf
      block: |
        overlay
        br_netfilter        
  
  - name: Load kernel modules
    command: modprobe {{ item }}
    with_items:
      - overlay
      - br_netfilter

  - name: Sysctl parameters required for Kubernetes networking
    lineinfile:
      create: true
      path: /etc/sysctl.d/k8s.conf
      line: "{{ item }}"
    with_items:
      - 'net.bridge.bridge-nf-call-iptables  = 1'
      - 'net.bridge.bridge-nf-call-ip6tables = 1'
      - 'net.ipv4.ip_forward                 = 1'

  - name: Apply sysctl parameters
    command: sysctl --system

  - name: Add Docker official GPG key
    get_url:
      url: https://download.docker.com/linux/debian/gpg
      dest: /etc/apt/keyrings/docker.asc
      mode: 0644

  - name: Add Docker repository
    apt_repository:
      repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
      filename: docker
      update_cache: yes

  - name: Install Docker and Containerd
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

  - name: Add Kubernetes official GPG key
    get_url:
      url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
      dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
      mode: 0644

  - name: Add Kubernetes repository
    apt_repository:
      repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
      filename: kubernetes
      update_cache: yes

  - name: Install Kubernetes packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - kubelet=1.29.3-1.1
      - kubeadm=1.29.3-1.1
      - kubectl=1.29.3-1.1

  - name: Install Kubernetes CNI plugins
    unarchive:
      src: "https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-amd64-v1.4.0.tgz"
      dest: /opt/cni/bin
      remote_src: true
      mode: '0755'

  - name: Use systemd Cgroup driver for containerd
    shell: |
      containerd config default > /etc/containerd/config.toml
      sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml      

  - name: Restart containerd
    systemd:
      name: containerd
      state: restarted
      enabled: yes
      daemon_reload: yes